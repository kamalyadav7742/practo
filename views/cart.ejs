<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css"
        integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
    <script src="jquery-3.6.3.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    <link rel="stylesheet" href="../css/style2.css">
    <title>cart</title>

    <!-- <style>
        @import url('https://fonts.googleapis.com/css2?family=Mulish:wght@300&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Mulish', sans-serif;
        }

        .header .header__cart .header__submenu .shopping-cart-container {
            position: absolute;
            border: 1px solid black;
            top: 60px;
            right: -2%;
            padding: 1em;
            background-color: #fff;
            z-index: 5;
            transform: scale(0);
            transform: translatey(-10px);
            opacity: 0;
            pointer-events: none;
        }

        .header .header__cart .header__submenu .shopping-cart-container.open {
            -webkit-animation: fade-down 0.3s forwards;
            animation: fade-down 0.3s forwards;
            pointer-events: auto;
        }

        .header .header__cart .header__submenu .cart {
            fill: white;
            display: inline-block;
            /* float: left; */
            margin-right: 2px;
            cursor: pointer;
        }

        .header .header__cart .header__submenu {
            font-size: 0.8rem;
            font-weight: 700;
        }

        .header .header__cart .header__submenu .shopping-cart-container {
            text-align: center;
            min-width: 300px;
        }

        .header .header__cart .header__submenu .shopping-cart-container table {
            width: 100%;
            padding: 0.5em;
            padding-bottom: 2em;
            border-collapse: collapse;
            border-spacing: 0;
            margin-bottom: 2.5em;
        }

        .header .header__cart .header__submenu .shopping-cart-container table thead th {
            padding-bottom: 10px;
            border-bottom: 1px solid #ea332a;
        }

        .header .header__cart .header__submenu .shopping-cart-container table tbody {
            padding-bottom: 4em;
        }

        .header .header__cart .header__submenu .shopping-cart-container table tbody td {
            padding: 0.5em;
        }

        .header .header__cart .header__submenu .cart-image {
            max-width: 120px;
        }

        .header .header__cart .header__submenu .remove {
            text-align: center;
            width: 120px;
            height: 120px;
            padding: 5px 10px;
            border-radius: 50%;
            background-color: #ea332a;
            color: #daed0e;
            transition: background-color 0.3s ease-out;
        }

        .header .header__cart .header__submenu .remove:hover,
        .header .header__cart .header__submenu .remove:focus {
            background-color: #b61a12;
        }

        .header .header__cart .header__submenu .cart-btn {
            display: block;
            margin-bottom: 10px;
            padding: 0.3em;
            border-radius: 5px;
            text-align: center;
            text-decoration: none;
            background-color: transparent;
            color: #333;
            border: 1px solid #ea332a;
        }

        .header .header__cart .header__submenu .cart-btn:hover,
        .header .header__cart .header__submenu .cart-btn:focus {
            background-color: #b61a12;
            color: #fff;
        }

        .header .header__submenu .total-container {
            text-align: center;
        }

        .header .header__submenu .total-container .total {
            font-weight: bold;
            font-size: 1.3em;
        }

        .header .header__cart .header__cart-btn {
            background-color: #14bef0;
            margin-top: 3px;
            /* border: 1px solid #ea332a; */
            padding: 14px 12px 6px 12px;
            font-size: 1rem;
            border-radius: 5px;
            color: white;
        }
    </style> -->

    <style>
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Mulish', sans-serif;
        }

        th{
            border: 1px solid red;

        }

        /* Style the cart badge */
#c {
  background-color: #FF4136;
  color: white;
  padding: 3px 8px;
  border-radius: 50%;
}

/* Style the table */
table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  border: 1px solid #ddd;
  padding: 8px;
}

th {
  background-color: #F5F5F5;
  text-align: left;
}

/* Style the checkout button */
.btn-outline-primary {
  background-color: #0074D9;
  color: white;
  border-color: #0074D9;
  padding: 10px 20px;
  border-radius: 25px;
  transition: all 0.3s ease-in-out;
}

.btn-outline-primary:hover {
  background-color: #0063aa;
  border-color: #0063aa;
  transform: scale(1.1);
}

/* Style the shopping cart container */
.shopping-cart-container {
  /* background-color: white; */
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
  padding: 20px;
}

/* Style the total container */
.total-container {
  font-weight: bold;
  margin-top: 20px;
  text-align: right;
}

/* Add some animation to the shopping cart container */
.shopping-cart-container {
  /* opacity: 0; */
  transform: translateY(-20px);
  transition: all 0.3s ease-in-out;
}

.shopping-cart-container.show {
  opacity: 1;
  transform: translateY(0);
}


    </style>

</head>

<body style="background-color: rgb(240,240,245);">
    
    <!-- navbar -->
    <nav class="navbar navbar-expand-lg bg-dark">
        <div class="container-fluid ">
            <a class="navbar-brand" href="/"><img class="py-2" src="/image/white_practo_logo.svg" width="120px"></a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
      
           
          </div>
        </div>
      </nav>
    <!-- end -->

    <div class="container-fluid mt-4">
        <div class="row justify-content-center">
            <div class="col-md-2 mb-2 mt-2">
                <sup style="font-size: 20px;">My cart:<b id="c"></b> items
                </sup>
            </div>
            </div>
            <div class="header__cart" style=" background-color: white;">
                <ul>
                    <li class="header__submenu" id="submenu" style="list-style: none;">
                       
                        <div id="shopping-cart" class="shopping-cart-container">
                            <table class="mt-4" id="cart-content" style="width: 100%;">
                                <thead>
                                    <tr> 
                                        <th class="border border-dark">Image</th>
                                        <th class="border border-dark">Name</th>
                                        <th class="border border-dark">Price</th>
                                    </tr>
                                    <hr>
                                </thead>
                                <tbody></tbody>
                            </table>
                            <p class="total-container" id="total-price"></p>
                        </div>
                    </li>
            
                    <div class="text-center py-2" style="box-shadow: 5px 0 6px 5px rgba(0, 0, 0, .035); position: sticky; top: 0;">
                        <button type="button" style="width: 70%;" class="btn btn-outline-primary mt-4">Checkout</button>
                    </div>
                </ul>
            
              


    <script>
        (function ($) {
            $(document).ready(function () {

                $('#cssmenu li.active').addClass('open').children('ul').show();
                $('#cssmenu li.has-sub>a').on('click', function () {
                    $(this).removeAttr('href');
                    var element = $(this).parent('li');
                    if (element.hasClass('open')) {
                        element.removeClass('open');
                        element.find('li').removeClass('open');
                        element.find('ul').slideUp(200);
                    }
                    else {
                        element.addClass('open');
                        element.children('ul').slideDown(200);
                        element.siblings('li').children('ul').slideUp(200);
                        element.siblings('li').removeClass('open');
                        element.siblings('li').find('li').removeClass('open');
                        element.siblings('li').find('ul').slideUp(200);
                    }
                });

            });
        })(jQuery);
        
        
        
        </script>
      
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N"
        crossorigin="anonymous"></script>
        <script>

(function() {
    // VARS
    const productsContainer = document.querySelector("#grid");
    const cartContainer = document.querySelector("#shopping-cart");
    const cartContent = document.querySelector("#cart-content");
    const toggleCartBtn = document.querySelector("#toggle-cart-btn");
    const clearCartBtn = document.querySelector("#clear-cart");
    const checkoutBtn = document.querySelector("#checkout-btn");
    const totalPriceContainer = document.querySelector("#total-price");
    
    
    // FUNCTIONS
  
    function toggleCart() {
      // toggle shopping cart visibility
      cartContainer.classList.toggle("open");
    }
  
    function getLSContent() {
      // get contents from local storage.
      // if nothing is there, create an empty array
      const lsContent = JSON.parse(localStorage.getItem("products")) || [];
      return lsContent;
    }
  
    function setLSContent(lsContent) {
      // save content inside local storage
      localStorage.setItem("products", JSON.stringify(lsContent));
    }
  
    function calculateTotal(prices) {
      // calculate the total price in the cart
      return prices.reduce(function(prev, next) {
        return prev + next;
      }, 0);
    }
  
    function getCartItemPrices() {
      // extract the price numbers from the cart items to calculate total
      const prices = [];
      // retrieve the td element in the cart where the product price is stored
      // for each product in the cart
      let nums = cartContent.querySelectorAll("tr td:nth-child(3)");
  
      // iterate over each td node and extract the price
      // strip the $ sign from the text, turn the string into
      // a number and push the number into the prices array
      if (nums.length > 0) {
        for (let cell = 0; cell < nums.length; cell++) {
          let num = nums[cell].innerText;
          num = num.replace(/[^\d]/g, "");
          num = parseFloat(num);
          prices.push(num);
        }
        // return the prices array
        return prices;
      } else {
        return;
      }
    }
  
    function displayCartTotal() {
      // display the total cost in the cart
      const prices = getCartItemPrices();
      let total = 0;
      if (prices) {
        total = calculateTotal(prices);
        totalPriceContainer.innerHTML = `<span class="total">Payable Amount: ₹${total.toFixed(
          2
        )}</span>`;
      } else {
        totalPriceContainer.innerHTML = '<span class="total">Total: ₹0</span>';
      }
    }
  
    function displayProducts() {
      // display all products in the cart
  
      // get contents from local storage
      const lsContent = getLSContent();
      
      let productMarkup = "";
      var x =0;
      document.getElementById("c").innerText = x;
      // if local storage is not empty, build the
      // cart items markup and the appropriate details
      if (lsContent !== null) {
        for (let product of lsContent) {
          productMarkup += `
          
            <tr>
            <td  class="border border-dark text-center"><img class="cart-image img-fluid" src="${product.image}" alt="${
            product.name
          }" width="120"></td>
            <td  class="border border-dark text-center">
              ${product.name}
            </td>
            <td class="border border-dark text-center">${product.price}</td>
            </tr>
          `;
          x=x+1;
          document.getElementById("c").innerText= x;
        }
      } else {
        // if no content is in local storage, alert user
        productMarkup = "Your cart is empty.";
      }
      // add markup to DOM
      cartContent.querySelector("tbody").innerHTML = productMarkup;
    }
  
    function saveProduct(clickedBtn) {
      // save selected product in local storage and display it in the cart together
  
      // vars
      const productId = clickedBtn.getAttribute("data-id");
      const card = clickedBtn.parentElement.parentElement;
      const cardInfo = clickedBtn.parentElement;
      const prodImage = card.querySelector("img").src;
      const prodName = cardInfo.querySelector("h4").textContent;
      const prodPrice = cardInfo.querySelector(".card__price").textContent;
  
      let isProductInCart = false;
  
      // get local storage array
      const lsContent = getLSContent();
  
      // to avoid user adds the same course twice, check
      // the product is not in LS already before adding it
      lsContent.forEach(function(product) {
        if (product.id === productId) {
          alert("This course is already in your cart.");
          isProductInCart = true;
        }
      });
  
      // only if the product is not already in the cart,
      // create an object representing selected product info
      // and push it into local storage array
      if (!isProductInCart) {
        lsContent.push({
          id: productId,
          image: prodImage,
          name: prodName,
          price: prodPrice
        });
  
        // add product into into local storage
        setLSContent(lsContent);
        // update the display of courses in the shopping cart
        displayProducts();
      }
    }
  
    function removeProduct(productId) {
      // remove product from cart (and from local storage)
  
      // retrieve list of products from LS
      const lsContent = getLSContent();
  
      // get the index of the product item to remove
      // inside the local storage content array
      let productIndex;
      lsContent.forEach(function(product, i) {
        if (product.id === productId) {
          productIndex = i;
        }   
      }); 
  
      // modify the items in local storage array
      // to remove the selected product item
  
      lsContent.splice(productIndex, 1);
      // update local storage content
      setLSContent(lsContent);
  
      displayProducts();
    }
    
    function clearCart() {
      // clear all products from cart (and local storage)
  
      // retrieve list of products from LS
      const lsContent = getLSContent();
      // empty array in local storage
      lsContent.splice(0, lsContent.length);
      // update local storage
      setLSContent(lsContent);
      // display cart content again
      displayProducts();
    }
  
    function checkout() {
      // checkout: just clear the cart
      // after user confirms the checkout process
      const cartProducts = cartContent.querySelector("tbody").innerHTML;
      if (cartProducts !== "" && confirm("Are you sure you want to checkout?")) {
        clearCart();
      } else {
        return;
      }
    }
  
    // BIND EVENTS AND CALL FUNCTIONS
  
    // Page load:
    document.addEventListener("DOMContentLoaded", function(e) {
      // display list of products in cart, if any, on page load
      displayProducts();
      // display cart total
      displayCartTotal();
    });
  
    // open and close shopping cart
    // when cart button is clicked
    toggleCartBtn.addEventListener("click", function(e) {
      e.preventDefault();
      toggleCart();
    });
  
    // Save product in cart and Local Storage
    // when add to cart button is clicked
    productsContainer.addEventListener("click", function(e) {
      if (e.target.classList.contains("add-to-cart")) {
        e.preventDefault();
        const clickedBtn = e.target;
        saveProduct(clickedBtn);
      }
    });
  
    productsContainer.addEventListener("click", function(e) {
      if (e.target.classList.contains("add-to-cart")) {
        displayCartTotal();
      }
    });
  
    // bind removeProduct to click event of the cartContent table
    cartContent.querySelector("tbody").addEventListener("click", function(e) {
      e.preventDefault();
      // identify the button that was clicked
      const clickedBtn = e.target;
      // if it's a remove button
      if (e.target.classList.contains("remove")) {
        // get the value of the data-id property, which contains the
        // id of the selected product
        const productId = clickedBtn.getAttribute("data-id");
        // use the id to remove the selected product
        removeProduct(productId);
        // display products in the cart again,
        // now the list should be displayed with 1 less product
        // or empty if no products are left in the cart
  
        // adjust the total
        displayCartTotal();
      }
    });
  
    // bind the button to clear the cart both to the function that
    // clears the cart and to the function that adjusts the total price
    clearCartBtn.addEventListener("click", function(e) {
      e.preventDefault();
      clearCart();
    });
    clearCartBtn.addEventListener("click", displayCartTotal);
  
    // bind the button that does the checkout both to the function that
    // controls the checkout and and to the function that adjusts the total price
    // checkoutBtn.addEventListener("click", function(e) {
    //   e.preventDefault();
    //   checkout();
    // });
    checkoutBtn.addEventListener("click", displayCartTotal);
  })();

        </script>
</body>

</html>